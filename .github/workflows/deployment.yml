name: deploy-cryptopia-app-heroku # name of workflow

on:
  push:
    branches: # branches that trigger workflow to run
      - master
      - main

jobs:
  cache-and-install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 # checksout repo to runner so workflow can run it

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 6.0.2

      - run: pnpm install # execute shell commands on runner. ci similar to npm install
      - name: Run production migration
        run: pnpm run migrate:deploy # sync database changes to production
        env: # provide database connection to runner
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      - uses: akhileshns/heroku-deploy@v3.12.12 # action to deploy final code to heroku
        with: # with keyword to pass certain params to action
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
